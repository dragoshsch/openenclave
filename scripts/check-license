#!/usr/bin/env bash

# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

##==============================================================================
##
## check-license:
##
##     This script checks for Open Enclave files that are missing the license
##     header. It prints the names of files with missing headers to standard
##     output.
##
##     To ignore certain files or directories, add them to:
##         .check-license.ignore
##
##==============================================================================

status=0
ignore_file="$(git rev-parse --show-toplevel)/.check-license.ignore"

expand_ignore_file()
{
    local tempfile=$(mktemp)

    touch "${tempfile}"

    # Expand each entry in the ignore file:
    while IFS= read -r i
    do
        if [[ $(basename "$i") == "$i" ]]; then
            find . -name "$i" >> "${tempfile}"
        else
            if [[ -e ${i} ]]; then
                echo "$i" >> "$tempfile"
            else
                # This relies on globbing.
                # shellcheck disable=SC2086
                ls -1 ${i} >> "$tempfile" 2> /dev/null
            fi
        fi
    done <"$ignore_file"

    echo "$tempfile"
}

ignore_patterns=$(expand_ignore_file)

while IFS= read -r i
do
    if [[ $(basename "$i") == "$i" ]]; then
        ignore_patterns+=("$i")
    elif [[ -e $i ]]; then
        ignore_patterns+=("$i")
    else
        # This relies on globbing.
        # shellcheck disable=SC2086
        for j in $(ls -1 $i 2> /dev/null); do
            ignore_patterns+=("$j")
        done
    fi
done <"$ignore_file"

for j in "${ignore_patterns[@]}"; do
    echo IGNORING $j
done

test_pattern() {
    while IFS= read -r pattern; do
        echo Testing $i against $pattern
        case $i in ($pattern) return 1; break ;; esac
    done <"$ignore_file"
    return 0
}

copyright="Copyright (c) Microsoft Corporation. All rights reserved."
license="Licensed under the MIT License."

while IFS= read -r i; do
    # Ignore matching paths
    if grep -q -F -x "$i" "$ignore_patterns"; then
        continue
    fi

    # Ignore by basename
    if grep -q -F -x $(basename "$i") "$ignore_patterns"; then
        continue
    fi

    ignore=0
    while IFS= read -r pattern; do
        case $i in ($pattern) ignore=1; break ;; esac
    done <"$ignore_file"

    # Ignore by shell glob
    if [[ $ignore -eq 1 ]]; then
        continue
    fi

    # Ignore by extension
    # Ignore by directory

    if ! grep -m1 -q -F "$copyright" "$i"; then
        echo "$i"
        status=1
        continue
    fi

    if ! grep -m1 -q -F "$license" "$i"; then
        echo "$i"
        status=1
    fi
done < <(git ls-files)

exit $status